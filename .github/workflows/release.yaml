name: Release

on:
    push:
        tags:
            - "v[0-9]+.*"

permissions:
    contents: write # Needed for creating releases and uploading assets

env:
    CARGO_TERM_COLOR: always
    RUST_BACKTRACE: 1
    # Default binary name
    BINARY_NAME: lazylora

jobs:
    create-release:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: taiki-e/create-gh-release-action@v1
              with:
                  # If you have a changelog file, specify it here
                  # changelog: CHANGELOG.md
                  token: ${{ secrets.GITHUB_TOKEN }}

    upload-assets:
        needs: create-release
        strategy:
            fail-fast: false
            matrix:
                include:
                    - target: x86_64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: x86_64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: x86_64-apple-darwin
                      os: macos-latest
                    - target: x86_64-pc-windows-msvc
                      os: windows-latest
                    - target: aarch64-unknown-linux-gnu
                      os: ubuntu-latest
                    - target: aarch64-unknown-linux-musl
                      os: ubuntu-latest
                    - target: aarch64-apple-darwin
                      os: macos-latest
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v5

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target }}

            - uses: taiki-e/upload-rust-binary-action@v1
              with:
                  bin: lazylora
                  target: ${{ matrix.target }}
                  features: vendored-openssl
                  include: LICENSE,README.md
                  checksum: sha256
                  token: ${{ secrets.GITHUB_TOKEN }}

    test-installation:
        needs: upload-assets
        continue-on-error: true
        strategy:
            matrix:
                include:
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                    - os: macos-latest
                      target: x86_64-apple-darwin
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
        runs-on: ${{ matrix.os }}
        steps:
            - name: Test installation on Linux/macOS
              if: matrix.os != 'windows-latest'
              shell: bash
              run: |
                  # Get the latest version tag
                  VERSION=$GITHUB_REF_NAME
                  # Use curl to download and test the binary
                  curl -L https://github.com/${{ github.repository }}/releases/download/${VERSION}/lazylora-${{ matrix.target }}.tar.gz -o lazylora.tar.gz
                  tar xzf lazylora.tar.gz
                  ./lazylora version

            - name: Test installation on Windows
              if: matrix.os == 'windows-latest'
              shell: pwsh
              run: |
                  # Get the latest version tag
                  $VERSION = $env:GITHUB_REF_NAME
                  # Use PowerShell to download and test the binary
                  Invoke-WebRequest -Uri "https://github.com/${{ github.repository }}/releases/download/${VERSION}/lazylora-${{ matrix.target }}.zip" -OutFile "lazylora.zip"
                  Expand-Archive -Path "lazylora.zip" -DestinationPath "."
                  .\lazylora.exe version
